{"ast":null,"code":"var _jsxFileName = \"/home/andi/Code/cv-booklet/src/components/widgets/Card.js\";\nimport React from 'react';\nimport css from './Card.module.css';\nimport Toolkit from '../../utils/Toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.breakpoint = 620;\n    this.useFilter = null;\n    this.filterRef = null;\n    this.imageRef = null;\n    this.filterFrequency = null;\n    this.filterId = props.filterId || 'card-filter_' + getRandomNumber();\n    this.filterRef = /*#__PURE__*/React.createRef(null);\n    this.imageRef = /*#__PURE__*/React.createRef(null);\n    this.filterFrequency = props.filterFrequency || '0.02';\n  }\n\n  componentDidMount() {\n    this.setImage(this.props.image);\n    setFilter(this, true);\n    window.addEventListener('resize', e => {\n      this.timer = Toolkit.delayedExecution(() => {\n        setFilter(this);\n      }, 100, this.timer);\n    });\n  }\n\n  setImage(imageName) {\n    import(`../../images/${imageName}`).then(image => {\n      if (!image || !image.default) {\n        console.error('Image not found');\n        return;\n      }\n\n      this.image = image.default;\n      updateImage(this);\n    });\n  }\n\n  getImageInfo() {\n    if (!this.props.description) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.info,\n      children: [this.props.title ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const bgImageCSS = {\n      backgroundImage: `url(${this.image})`\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css['card-widget'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.filterRef,\n        className: css['card-bg']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.card,\n        children: [this.getImageInfo(), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: this.imageRef,\n          className: `${css.image}`,\n          style: bgImageCSS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        children: /*#__PURE__*/_jsxDEV(\"filter\", {\n          id: this.filterId,\n          children: [/*#__PURE__*/_jsxDEV(\"feTurbulence\", {\n            x: \"0\",\n            y: \"0\",\n            baseFrequency: this.filterFrequency,\n            numOctaves: \"5\",\n            seed: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"feDisplacementMap\", {\n            in: \"SourceGraphic\",\n            scale: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction getRandomNumber() {\n  return Math.floor(Math.random() * 100000 + 1);\n}\n\nfunction setFilter(card, initialize) {\n  if ((initialize || card.useFilter === true) && window.innerWidth < card.breakpoint) {\n    card.filterRef.current.style.filter = '';\n    card.useFilter = false;\n  } else if ((initialize || card.useFilter === false) && window.innerWidth >= card.breakpoint) {\n    card.filterRef.current.style.filter = `url(#${card.filterId})`;\n    card.useFilter = true;\n  }\n}\n\nfunction updateImage(card) {\n  card.imageRef.current.style.backgroundImage = `url(${card.image})`;\n}","map":{"version":3,"sources":["/home/andi/Code/cv-booklet/src/components/widgets/Card.js"],"names":["React","css","Toolkit","Card","Component","constructor","props","breakpoint","useFilter","filterRef","imageRef","filterFrequency","filterId","getRandomNumber","createRef","componentDidMount","setImage","image","setFilter","window","addEventListener","e","timer","delayedExecution","imageName","then","default","console","error","updateImage","getImageInfo","description","info","title","render","bgImageCSS","backgroundImage","card","Math","floor","random","initialize","innerWidth","current","style","filter"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport css from './Card.module.css';\nimport Toolkit from '../../utils/Toolkit';\n\nexport default class Card extends React.Component {\n    breakpoint = 620;\n\n    useFilter = null;\n\n    filterRef = null;\n\n    imageRef = null;\n\n    filterFrequency = null;\n\n    constructor(props) {\n        super(props);\n        this.filterId = props.filterId || 'card-filter_' + getRandomNumber();\n        this.filterRef = React.createRef(null);\n        this.imageRef = React.createRef(null);\n        this.filterFrequency = props.filterFrequency || '0.02';\n    }\n\n    componentDidMount() {\n        this.setImage(this.props.image);\n        setFilter(this, true);\n        window.addEventListener('resize', (e) => {\n            this.timer = Toolkit.delayedExecution(\n                () => {\n                    setFilter(this);\n                },\n                100,\n                this.timer\n            );\n        });\n    }\n\n    setImage(imageName) {\n        import(`../../images/${imageName}`).then((image) => {\n            if (!image || !image.default) {\n                console.error('Image not found');\n                return;\n            }\n            this.image = image.default;\n            updateImage(this);\n        });\n    }\n\n    getImageInfo() {\n        if (!this.props.description) {\n            return null;\n        }\n        return (\n            <div className={css.info}>\n                {this.props.title ? <h2>{this.props.title}</h2> : null}\n                <p>{this.props.description}</p>\n            </div>\n        );\n    }\n\n    render() {\n        const bgImageCSS = {\n            backgroundImage: `url(${this.image})`,\n        };\n\n        return (\n            <div className={css['card-widget']}>\n                <div ref={this.filterRef} className={css['card-bg']}></div>\n                <div className={css.card}>\n                    {this.getImageInfo()}\n                    <div\n                        ref={this.imageRef}\n                        className={`${css.image}`}\n                        style={bgImageCSS}\n                    ></div>\n                </div>\n                <svg>\n                    <filter id={this.filterId}>\n                        <feTurbulence\n                            x=\"0\"\n                            y=\"0\"\n                            baseFrequency={this.filterFrequency}\n                            numOctaves=\"5\"\n                            seed=\"1\"\n                        ></feTurbulence>\n                        <feDisplacementMap in=\"SourceGraphic\" scale=\"20\" />\n                    </filter>\n                </svg>\n            </div>\n        );\n    }\n}\n\nfunction getRandomNumber() {\n    return Math.floor(Math.random() * 100000 + 1);\n}\n\nfunction setFilter(card, initialize) {\n    if (\n        (initialize || card.useFilter === true) &&\n        window.innerWidth < card.breakpoint\n    ) {\n        card.filterRef.current.style.filter = '';\n        card.useFilter = false;\n    } else if (\n        (initialize || card.useFilter === false) &&\n        window.innerWidth >= card.breakpoint\n    ) {\n        card.filterRef.current.style.filter = `url(#${card.filterId})`;\n        card.useFilter = true;\n    }\n}\n\nfunction updateImage(card) {\n    card.imageRef.current.style.backgroundImage = `url(${card.image})`;\n}\n"]},"metadata":{},"sourceType":"module"}